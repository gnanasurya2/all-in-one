//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "movies")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub imdb_id: String,
    pub liked: Option<i8>,
    pub watched: Option<i8>,
    pub watch_list: Option<i8>,
    pub user_id: i32,
    #[sea_orm(column_type = "Float")]
    pub rating: f32,
    pub created_at: Option<DateTimeUtc>,
    pub updated_at: Option<DateTimeUtc>,
    pub watched_date: Option<DateTime>,
    pub poster: Option<String>,
    pub year: i32,
    pub title: String,
    pub rewatch: Option<i8>,
    pub r#type: Option<String>,
    pub season: Option<i32>,
    pub episode: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::UserId",
        to = "super::users::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Users,
}

impl Related<super::users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Users.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
